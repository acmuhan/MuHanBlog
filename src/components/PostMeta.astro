---
import { Icon } from "astro-icon/components";
import I18nKey from "../i18n/i18nKey";
import { i18n } from "../i18n/translation";
import { formatDateToYYYYMMDD } from "../utils/date-utils";
import { getCategoryUrl, getTagUrl } from "../utils/url-utils";

interface Props {
	class: string;
	published: Date;
	updated?: Date;
	tags: string[];
	category: string | null;
	hideTagsForMobile?: boolean;
	hideUpdateDate?: boolean;
}
const {
	published,
	updated,
	tags,
	category,
	hideTagsForMobile = false,
	hideUpdateDate = false,
} = Astro.props;
const className = Astro.props.class;
---

<div class:list={["flex flex-wrap text-neutral-500 dark:text-neutral-400 items-center gap-4 gap-x-4 gap-y-2", className]}>
    <!-- publish date -->
    <div class="flex items-center">
        <div class="meta-icon"
        >
            <Icon name="material-symbols:calendar-today-outline-rounded" class="text-xl"></Icon>
        </div>
        <span class="text-50 text-sm font-medium">{formatDateToYYYYMMDD(published)}</span>
    </div>

    <!-- update date -->
    {!hideUpdateDate && updated && updated.getTime() !== published.getTime() && (
        <div class="flex items-center">
            <div class="meta-icon"
            >
                <Icon name="material-symbols:edit-calendar-outline-rounded" class="text-xl"></Icon>
            </div>
            <span class="text-50 text-sm font-medium">{formatDateToYYYYMMDD(updated)}</span>
        </div>
    )}

    <!-- categories -->
    <div class="flex items-center">
        <div class="meta-icon"
        >
            <Icon name="material-symbols:book-2-outline-rounded" class="text-xl"></Icon>
        </div>
        <div class="flex flex-row flex-nowrap items-center">
            <a href={getCategoryUrl(category)} aria-label={`View all posts in the ${category} category`}
               class="link-lg transition text-50 text-sm font-medium
                            hover:text-[var(--primary)] dark:hover:text-[var(--primary)] whitespace-nowrap">
                {category || i18n(I18nKey.uncategorized)}
            </a>
        </div>
    </div>

    <!-- tags -->
    <div class:list={["items-center", {"flex": !hideTagsForMobile, "hidden md:flex": hideTagsForMobile}]}>
        <div class="meta-icon"
        >
            <Icon name="material-symbols:tag-rounded" class="text-xl"></Icon>
        </div>
        <div class="flex flex-row flex-nowrap items-center">
            {(tags && tags.length > 0) && (
                <>
                    {tags.slice(0, 3).map((tag, i) => (
                        <>
                            <div class:list={[{"hidden": i == 0}, "mx-1.5 text-[var(--meta-divider)] text-sm"]}>/</div>
                            <a href={getTagUrl(tag)} aria-label={`View all posts with the ${tag.trim()} tag`}
                               class="link-lg transition text-50 text-sm font-medium
                                            hover:text-[var(--primary)] dark:hover:text-[var(--primary)] whitespace-nowrap">
                                {tag.trim()}
                            </a>
                        </>
                    ))}
                    {tags.length > 3 && (
                        <>
                            <div class="mx-1.5 text-[var(--meta-divider)] text-sm">/</div>
                            <a href={getTagUrl(tags[3])}
                               class="link-lg transition text-50 text-sm font-medium hover:text-[var(--primary)] dark:hover:text-[var(--primary)] whitespace-nowrap">
                                +{tags.length - 3}
                            </a>
                        </>
                    )}
                </>
            )}
            {!(tags && tags.length > 0) && <div class="transition text-50 text-sm font-medium">{i18n(I18nKey.noTags)}</div>}
        </div>
    </div>

    <!-- analytics (Umami) -->
    <div class="flex items-center gap-4">
        <div class="flex items-center">
            <div class="meta-icon">
                <Icon name="material-symbols:bar-chart-4-bars-rounded" class="text-xl"></Icon>
            </div>
            <div id="post-views" class="transition text-50 text-sm font-medium whitespace-nowrap">--</div>
        </div>
        <div class="flex items-center">
            <div class="meta-icon">
                <Icon name="material-symbols:group-rounded" class="text-xl"></Icon>
            </div>
            <div id="post-visitors" class="transition text-50 text-sm font-medium whitespace-nowrap">--</div>
        </div>
    </div>
</div>

<script is:inline>
// Fetch page views for current post using our proxy API
(async () => {
  try {
    const endpoint = `/api/stats?url=${encodeURIComponent(window.location.pathname)}`;
    const res = await fetch(endpoint);
    if (!res.ok) return;
    const data = await res.json();

    const pv = Number(data?.pageviews || 0);
    const uv = Number(data?.visitors || 0);

    const viewsEl = document.getElementById('post-views');
    if (viewsEl) viewsEl.textContent = `${pv} 次浏览`;

    const visitorsEl = document.getElementById('post-visitors');
    if (visitorsEl) visitorsEl.textContent = `${uv} 位访客`;

  } catch (_) {}
})();
</script>